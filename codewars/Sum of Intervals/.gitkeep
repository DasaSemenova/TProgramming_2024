def sum_of_intervals(intervals):
    merged_intervals = merge_intervals(intervals)
    return sum(end - start for start, end in merged_intervals)

def merge_intervals(intervals):
    if not intervals:
        return []
    intervals.sort(key=lambda x: x[0])
    merged = []

    current_start, current_end = intervals[0]
    
    for start, end in intervals[1:]:
        if start > current_end:
            merged.append([current_start, current_end])
            current_start, current_end = start, end
        else: 
            current_end = max(current_end, end)
    
    merged.append([current_start, current_end])  
    return merged

if __name__ == "__main__":
    import ast
    intervals = ast.literal_eval(input())
    print(sum_of_intervals(intervals))